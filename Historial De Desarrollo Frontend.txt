-----------------------------------------------------------------------------------------------------------
1) Vue-Router (creacion de directorios y archivos basicos)

    - npm install vue-router
    - Iremos a la carpeta resources/js y crearemos la carpeta "router" y dentro de router crearemos
        dos archivos: "index.js" y "routes.js".
    - index.js: Tendra la configuracion y parametros de nuestro router. Una vez configurado, ya
        no debiese modificarse mas.
    - routes.js: Tendra unicamente las rutas de nuestra SPA, por lo que tendremos que modificarlo
        activamente conforme agregemos componentes.

    - Agregaremos el router al main.js (el cual contiene el componente principal del programa)

2) Vuex (creacion de archivos y directorios basicos)

    npm install vuex --save
    - Iremos a la carpeta resources/js y crearemos la carpeta "store" y dentro de router crearemos
        dos archivos: "index.js" y "userStorage.js".
    - index.js: Tendra la configuracion y parametros de nuestro store. Una vez configurado, ya
        no debiese modificarse mas (o muy poco).
    - userStorage.js: Tendra toda la logica, funciones, mutators, estados de nuestra aplicacion en
        base a los usuarios.

    - Agregaremos la store a nuestro main.js (el cual contiene el componente principal del programa)

-----------------------------------------------------------------------------------------------------------
3) Services

    - Se crea las carpetas Services


-----------------------------------------------------------------------------------------------------------
12) Alias

    - Modificacion de archivo webpack.mix.js para agregar alias hacia "components" y "services"

-----------------------------------------------------------------------------------------------------------
13) Vistas/Componentes

    - Se crea componente principal de la aplicacion llamado "App.vue" en la ubicacion resources/js/components

    - Se crea la vista "index.blade.php" el cual contiene el componente principal (app.vue) de toda la aplicacion.
    *Considerar que para agregar el css (entre ello el bootstrap) y todo el JS, debemos importarlos mediante laravel
    mix (a fluent API for defining Webpack build steps for your Laravel application using several common CSS and
    JavaScript pre-processors) a nuestra plantilla Blade principal.
    En el caso de css debemos importar dentro del head:
        <link rel="stylesheet" href="{{ mix('css/app.css') }}">
    En el caso del Js debemos importar al final del body:
        <script src="{{ mix('js/main.js') }}"></script>

    -  Se crea las subcarpetas y componentes para el Header (navbar) y el footer




-----------------------------------------------------------------------------------------------------------
13) Vistas/Componentes

-----------------------------------------------------------------------------------------------------------
13) Vistas/Componentes

-----------------------------------------------------------------------------------------------------------
13) Vistas/Componentes

-----------------------------------------------------------------------------------------------------------
13) Vistas/Componentes

-----------------------------------------------------------------------------------------------------------
13) Vistas/Componentes

-----------------------------------------------------------------------------------------------------------
13) Vistas/Componentes

-----------------------------------------------------------------------------------------------------------
13) Vistas/Componentes

-----------------------------------------------------------------------------------------------------------
13) Vistas/Componentes

-----------------------------------------------------------------------------------------------------------
13) Vistas/Componentes
